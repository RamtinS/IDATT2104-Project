$date
	Sat May 18 13:49:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module parallellexample_tb $end
$var wire 9 ! i4 [8:0] $end
$var wire 9 " i3 [8:0] $end
$var wire 9 # i2 [8:0] $end
$var wire 9 $ i1 [8:0] $end
$var wire 9 % h4 [8:0] $end
$var wire 9 & h3 [8:0] $end
$var wire 9 ' h2 [8:0] $end
$var wire 9 ( h1 [8:0] $end
$var wire 9 ) g4 [8:0] $end
$var wire 9 * g3 [8:0] $end
$var wire 9 + g2 [8:0] $end
$var wire 9 , g1 [8:0] $end
$var reg 8 - a1 [7:0] $end
$var reg 8 . a2 [7:0] $end
$var reg 8 / a3 [7:0] $end
$var reg 8 0 a4 [7:0] $end
$var reg 8 1 b1 [7:0] $end
$var reg 8 2 b2 [7:0] $end
$var reg 8 3 b3 [7:0] $end
$var reg 8 4 b4 [7:0] $end
$var reg 8 5 c1 [7:0] $end
$var reg 8 6 c2 [7:0] $end
$var reg 8 7 c3 [7:0] $end
$var reg 8 8 c4 [7:0] $end
$var reg 8 9 d1 [7:0] $end
$var reg 8 : d2 [7:0] $end
$var reg 8 ; d3 [7:0] $end
$var reg 8 < d4 [7:0] $end
$var reg 8 = e1 [7:0] $end
$var reg 8 > e2 [7:0] $end
$var reg 8 ? e3 [7:0] $end
$var reg 8 @ e4 [7:0] $end
$var reg 8 A f1 [7:0] $end
$var reg 8 B f2 [7:0] $end
$var reg 8 C f3 [7:0] $end
$var reg 8 D f4 [7:0] $end
$scope module uut $end
$var wire 8 E a1 [7:0] $end
$var wire 8 F a2 [7:0] $end
$var wire 8 G a3 [7:0] $end
$var wire 8 H a4 [7:0] $end
$var wire 8 I b1 [7:0] $end
$var wire 8 J b2 [7:0] $end
$var wire 8 K b3 [7:0] $end
$var wire 8 L b4 [7:0] $end
$var wire 8 M c1 [7:0] $end
$var wire 8 N c2 [7:0] $end
$var wire 8 O c3 [7:0] $end
$var wire 8 P c4 [7:0] $end
$var wire 8 Q d1 [7:0] $end
$var wire 8 R d2 [7:0] $end
$var wire 8 S d3 [7:0] $end
$var wire 8 T d4 [7:0] $end
$var wire 8 U e1 [7:0] $end
$var wire 8 V e2 [7:0] $end
$var wire 8 W e3 [7:0] $end
$var wire 8 X e4 [7:0] $end
$var wire 8 Y f1 [7:0] $end
$var wire 8 Z f2 [7:0] $end
$var wire 8 [ f3 [7:0] $end
$var wire 8 \ f4 [7:0] $end
$var wire 9 ] i4 [8:0] $end
$var wire 9 ^ i3 [8:0] $end
$var wire 9 _ i2 [8:0] $end
$var wire 9 ` i1 [8:0] $end
$var wire 9 a h4 [8:0] $end
$var wire 9 b h3 [8:0] $end
$var wire 9 c h2 [8:0] $end
$var wire 9 d h1 [8:0] $end
$var wire 9 e g4 [8:0] $end
$var wire 9 f g3 [8:0] $end
$var wire 9 g g2 [8:0] $end
$var wire 9 h g1 [8:0] $end
$scope module uut $end
$var wire 8 i a1 [7:0] $end
$var wire 8 j a2 [7:0] $end
$var wire 8 k a3 [7:0] $end
$var wire 8 l a4 [7:0] $end
$var wire 8 m b1 [7:0] $end
$var wire 8 n b2 [7:0] $end
$var wire 8 o b3 [7:0] $end
$var wire 8 p b4 [7:0] $end
$var wire 9 q c4 [8:0] $end
$var wire 9 r c3 [8:0] $end
$var wire 9 s c2 [8:0] $end
$var wire 9 t c1 [8:0] $end
$upscope $end
$scope module uut1 $end
$var wire 8 u a1 [7:0] $end
$var wire 8 v a2 [7:0] $end
$var wire 8 w a3 [7:0] $end
$var wire 8 x a4 [7:0] $end
$var wire 8 y b1 [7:0] $end
$var wire 8 z b2 [7:0] $end
$var wire 8 { b3 [7:0] $end
$var wire 8 | b4 [7:0] $end
$var wire 9 } c4 [8:0] $end
$var wire 9 ~ c3 [8:0] $end
$var wire 9 !" c2 [8:0] $end
$var wire 9 "" c1 [8:0] $end
$upscope $end
$scope module uut2 $end
$var wire 8 #" a1 [7:0] $end
$var wire 8 $" a2 [7:0] $end
$var wire 8 %" a3 [7:0] $end
$var wire 8 &" a4 [7:0] $end
$var wire 8 '" b1 [7:0] $end
$var wire 8 (" b2 [7:0] $end
$var wire 8 )" b3 [7:0] $end
$var wire 8 *" b4 [7:0] $end
$var wire 9 +" c4 [8:0] $end
$var wire 9 ," c3 [8:0] $end
$var wire 9 -" c2 [8:0] $end
$var wire 9 ." c1 [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#200
b111000 !
b111000 ]
b111000 +"
b1000 D
b1000 \
b1000 *"
b11110 "
b11110 ^
b11110 ,"
b110 C
b110 [
b110 )"
b1100 #
b1100 _
b1100 -"
b100 B
b100 Z
b100 ("
b10 $
b10 `
b10 ."
b10 A
b10 Y
b10 '"
b111 @
b111 X
b111 &"
b101 ?
b101 W
b101 %"
b11 >
b11 V
b11 $"
b1 =
b1 U
b1 #"
b1001000 %
b1001000 a
b1001000 }
b1000 <
b1000 T
b1000 |
b101010 &
b101010 b
b101010 ~
b110 ;
b110 S
b110 {
b10100 '
b10100 c
b10100 !"
b100 :
b100 R
b100 z
b110 (
b110 d
b110 ""
b10 9
b10 Q
b10 y
b1001 8
b1001 P
b1001 x
b111 7
b111 O
b111 w
b101 6
b101 N
b101 v
b11 5
b11 M
b11 u
b100000 )
b100000 e
b100000 q
b100 4
b100 L
b100 p
b10010 *
b10010 f
b10010 r
b11 3
b11 K
b11 o
b1000 +
b1000 g
b1000 s
b10 2
b10 J
b10 n
b10 ,
b10 h
b10 t
b1 1
b1 I
b1 m
b1000 0
b1000 H
b1000 l
b110 /
b110 G
b110 k
b100 .
b100 F
b100 j
b10 -
b10 E
b10 i
#400
b111 D
b111 \
b111 *"
b101 C
b101 [
b101 )"
b11 B
b11 Z
b11 ("
b111000 !
b111000 ]
b111000 +"
b1000 @
b1000 X
b1000 &"
b11110 "
b11110 ^
b11110 ,"
b110 ?
b110 W
b110 %"
b1100 #
b1100 _
b1100 -"
b100 >
b100 V
b100 $"
b100 $
b100 `
b100 ."
b10 =
b10 U
b10 #"
b111 <
b111 T
b111 |
b101 ;
b101 S
b101 {
b11 :
b11 R
b11 z
b1 9
b1 Q
b1 y
b111000 %
b111000 a
b111000 }
b1000 8
b1000 P
b1000 x
b101000 &
b101000 b
b101000 ~
b1000 7
b1000 O
b1000 w
b10010 '
b10010 c
b10010 !"
b110 6
b110 N
b110 v
b100 (
b100 d
b100 ""
b100 5
b100 M
b100 u
b11 4
b11 L
b11 p
b10 3
b10 K
b10 o
b1 2
b1 J
b1 n
b10 1
b10 I
b10 m
b11011 )
b11011 e
b11011 q
b1001 0
b1001 H
b1001 l
b1110 *
b1110 f
b1110 r
b111 /
b111 G
b111 k
b101 +
b101 g
b101 s
b101 .
b101 F
b101 j
b110 ,
b110 h
b110 t
b11 -
b11 E
b11 i
#600
